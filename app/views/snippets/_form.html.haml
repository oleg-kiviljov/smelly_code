= simple_form_for(@snippet) do |f|
  = f.input :title, required: false
  = f.input :description, required: false
  = f.input :smelly_body, label: 'Smelly code', required: false
  = f.input :lexer_id, collection: @lexers, label_method: :name, value_method: :id, label: 'Programming language', required: false, include_blank: false, input_html: {class: 'chosen-select'}
  = f.button :submit, class: 'btn btn-primary btn-block'

:javascript
  $(document).on("ready page:load", function(){

  // Insert values from form to snippet example
    $("#snippet-form #snippet_title, #snippet_description").on("keyup blur", function(){
      var selector_id = $(this).attr('id').replace('snippet_', '');
      var $selector = $("#"+selector_id);
      insert_text($(this), $selector)
    });

  // Insert programming lexer on page load
  insert_text($("#snippet_lexer_id"), $("#lexer_id"));

  // Insert highlighted code into example snippet
  $("#snippet_lexer_id").on("change", function(){
     var smelly_code = $("#snippet_smelly_body").val();
     var lexer = $("#snippet_lexer_id").children("option:selected").text();
     insert_text($("#snippet_lexer_id"), $("#lexer_id"));
     highlight_smelly_code(smelly_code, lexer)
  });

  $("#snippet_smelly_body").on("keyup", function(){
    var smelly_code = $(this).val();
    var lexer = $("#snippet_lexer_id").children("option:selected").text();

    delay(500)(function(){
      highlight_smelly_code(smelly_code, lexer)
    })

  })

  // Sign up form validation

    $("#snippet-form form").validate({
      rules: {
        "snippet[title]": {
          required: true,
          maxlength: 200
        },
        "snippet[description]": {
          required: true,
          minlength: 50,
          maxlength: 300
        },
        "snippet[smelly_body]": {
          required: true,
            remote: {
              type: 'POST',
              url: '/snippets/check_lines_of_code',
              data: {lexer: $("#snippet_lexer_id").children("option:selected").text()}
            }
          }
      },
      messages: {
        "snippet[title]": {
          required: "This snippet needs a title",
          maxlength: "Too long for a title"
        },
        "snippet[description]": {
          required: "Minimum: 50 characters",
          maxlength: "No need to be so specific. This description is too long",
          minlength: "Please provide more detailed description"
        },
        "snippet[smelly_body]": {
          required: "There is no smelly code :(",
          remote: "Only 15 lines of code allowed (empty lines don't count)"
        }
      },
      highlight: function(element) {
        $(element).parent('div').removeClass('has-success').addClass('has-error');
      },
      unhighlight: function(element) {
        $(element).parent('div').removeClass('has-error').addClass('has-success');
        $(element).parent('div').find('.label-danger').remove()
      },
      errorPlacement: function(label, element) {
        $('<span class="label label-danger"></span>').insertAfter(element)
        $(element).next('span.label-danger').append(label)
      }
    });

  });
